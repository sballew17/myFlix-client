var helpers = require("../../../../../../Users/Sam/AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProfileView", ()=>ProfileView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactBootstrap = require("react-bootstrap");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _container = require("react-bootstrap/Container");
var _containerDefault = parcelHelpers.interopDefault(_container);
var _reactRouterDom = require("react-router-dom");
var _profileViewScss = require("./profile-view.scss");
class ProfileView extends _reactDefault.default.Component {
    constructor(props){
        super(props);
        this.state = {
            Username: "",
            Password: "",
            Email: "",
            Birthdate: "",
            FavoriteMovies: [],
            UsernameError: "",
            EmailError: "",
            PasswordError: "",
            BirthdateError: ""
        };
    }
    componentDidMount() {
        let accessToken = localStorage.getItem("token");
        this.getUsers(accessToken);
    }
    getUsers(token) {
        _axiosDefault.default.get('https://sam-superhero-movie-project.herokuapp.com/users', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            this.setState({
                users: response.data
            });
            console.log(response);
        }).catch(function(error) {
            console.log(error);
        });
    }
    removeFavorite(movie) {
        const token = localStorage.getItem("token");
        const url = "https://sam-superhero-movie-project.herokuapp.com/users" + localStorage.getItem("user") + "/movies/" + movie._id;
        _axiosDefault.default.delete(url, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            console.log(response);
            this.componentDidMount();
            alert(movie.Title + " has been removed from your Favorites.");
        });
    }
    handleDelete() {
        const token = localStorage.getItem("token");
        const user = localStorage.getItem("user");
        _axiosDefault.default.delete(`https://sam-superhero-movie-project.herokuapp.com/users/${user}`, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then(()=>{
            alert(user + " has been deleted.");
            localStorage.removeItem("user");
            localStorage.removeItem("token");
            window.location.pathname = "/";
        }).catch(function(error) {
            console.log(error);
        });
    }
    handleUpdate(e) {
        let token = localStorage.getItem("token");
        let user = localStorage.getItem("user");
        console.log(this.state);
        let setisValid = this.formValidation();
        if (setisValid) _axiosDefault.default.put(`https://sam-superhero-movie-project.herokuapp.com/users/${user}`, {
            Username: this.state.Username,
            Password: this.state.Password,
            Email: this.state.Email,
            Birthdate: this.state.Birthdate
        }, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            const data = response.data;
            localStorage.setItem("user", data.Username);
            console.log(data);
            alert(user + " has been updated.");
            console.log(response);
        }).catch(function(error) {
            console.log(error.response.data);
        });
    }
    handleChange(e) {
        let { name , value  } = e.target;
        this.setState({
            [name]: value
        });
    }
    render() {
        const { user , movies  } = this.props;
        const { UsernameError , EmailError , PasswordError , BirthdateError  } = this.state;
        const FavoriteMovieList = movies.filter((movie)=>{
            return this.state.FavoriteMovies.includes(movie._id);
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "userProfile",
            style: {
                display: "flex"
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 122
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_containerDefault.default, {
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 123
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Row, {
            className: "justify-content-md-center",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 124
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
            md: 12,
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 125
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "favoriteMovies",
            style: {
                float: "center",
                textAlign: "center"
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 126
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Text, {
            className: "mt-200",
            as: "h3",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 127
            },
            __self: this
        }, "Favorite Movies:"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Row, {
            className: "mb-20",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 128
            },
            __self: this
        }, FavoriteMovieList.map((movie)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 3,
                key: movie._id,
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 131
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                key: movie._id,
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 132
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card, {
                className: "mb-20",
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 133
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Img, {
                variant: "top",
                src: movie.ImagePath,
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 134
                },
                __self: this
            }), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Body, {
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 135
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
                to: `/movies/${movie._id}`,
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 136
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Title, {
                as: "h6",
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 137
                },
                __self: this
            }, movie.Title)), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
                className: "mb-30",
                onClick: ()=>this.removeFavorite(movie)
                ,
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 139
                },
                __self: this
            }, "Remove"))))));
        }))), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form, {
            className: "justify-content-md-center",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 151
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("h1", {
            style: {
                textAlign: "center"
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 152
            },
            __self: this
        }, "Update Profile Details"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Group, {
            controlId: "formUsername",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 153
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Label, {
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 154
            },
            __self: this
        }, "Username: "), /*#__PURE__*/ _reactDefault.default.createElement(FormControl, {
            size: "sm",
            type: "text",
            name: "Username",
            value: this.state.Username,
            onChange: (e)=>this.handleChange(e)
            ,
            placeholder: "Change username",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 155
            },
            __self: this
        }), Object.keys(UsernameError).map((key)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                key: key,
                style: {
                    color: "red"
                },
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 163
                },
                __self: this
            }, UsernameError[key]));
        })), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Group, {
            controlId: "formPassword",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 169
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Label, {
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 170
            },
            __self: this
        }, "Password: "), /*#__PURE__*/ _reactDefault.default.createElement(FormControl, {
            size: "sm",
            type: "password",
            name: "Password",
            value: this.state.Password,
            onChange: (e)=>this.handleChange(e)
            ,
            placeholder: "Enter current password or Change password",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 171
            },
            __self: this
        }), Object.keys(PasswordError).map((key)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                key: key,
                style: {
                    color: "red"
                },
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 179
                },
                __self: this
            }, PasswordError[key]));
        })), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Group, {
            controlId: "formEmail",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 185
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Label, {
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 186
            },
            __self: this
        }, "Email: "), /*#__PURE__*/ _reactDefault.default.createElement(FormControl, {
            size: "sm",
            type: "email",
            name: "Email",
            value: this.state.Email,
            onChange: (e)=>this.handleChange(e)
            ,
            placeholder: "Change Email",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 187
            },
            __self: this
        }), Object.keys(EmailError).map((key)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                key: key,
                style: {
                    color: "red"
                },
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 196
                },
                __self: this
            }, EmailError[key]));
        })), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Group, {
            controlId: "formBirthdate",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 202
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form.Label, {
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 203
            },
            __self: this
        }, "Date of Birth: "), /*#__PURE__*/ _reactDefault.default.createElement(FormControl, {
            size: "sm",
            type: "date",
            name: "Birthdate",
            value: this.state.Birthdate,
            onChange: (e)=>this.handleChange(e)
            ,
            placeholder: "Change Birthdate",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 204
            },
            __self: this
        }), Object.keys(BirthdateError).map((key)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                key: key,
                style: {
                    color: "red"
                },
                __source: {
                    fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 213
                },
                __self: this
            }, BirthdateError[key]));
        })), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/users/${this.state.Username}`,
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 220
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
            className: "mb-2",
            variant: "success",
            type: "link",
            size: "md",
            block: true,
            onClick: (e)=>this.handleUpdate(e)
            ,
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 221
            },
            __self: this
        }, "Save changes"))))))));
    }
}
exports.default = connect(mapStateToProps, {
    setUser,
    updateUser
})(ProfileView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}