var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRedux = require("react-redux");
var _loginView = require("../login-view/login-view");
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            movies: [],
            selectedMovie: null
        };
    }
    componentDidMount() {
        _axiosDefault.default.get('https://sam-superhero-movie-project.herokuapp.com/movies').then((response)=>{
            this.setState({
                movies: response.data
            });
        }).catch((error)=>{
            console.log(error);
        });
    }
    setSelectedMovie(movie) {
        this.setState({
            selectedMovie: movie
        });
    }
    onLoggedIn(user) {
        this.setState({
            user
        });
    }
    render() {
        let { movies  } = this.props;
        let { user , register  } = this.state;
        // if (!user) return <LoginView onLoggedIn={user => this.onLoggedIn(user)} />;
        if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 48
            },
            __self: this
        }));
        return(/*#__PURE__*/ _reactDefault.default.createElement(Router, {
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 52
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 53
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("header", {
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 55
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(Navbar, {
            expand: "lg",
            fixed: "top",
            className: "nav-bar",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 56
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(Navbar.Brand, {
            className: "app-name navbar-brand",
            as: Link,
            to: `/`,
            target: "_self",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 57
            },
            __self: this
        }, "myFlix"), /*#__PURE__*/ _reactDefault.default.createElement(Navbar.Toggle, {
            "aria-controls": "basic-navbar-nav",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 58
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(Navbar.Collapse, {
            id: "basic-navbar-nav",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 59
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(Nav, {
            className: "mr-auto",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 60
            },
            __self: this
        }, user && /*#__PURE__*/ _reactDefault.default.createElement(Nav.Link, {
            as: Link,
            to: `/users/${user}`,
            target: "_self",
            className: "navbar-item",
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 62
            },
            __self: this
        }, "My Account")), /*#__PURE__*/ _reactDefault.default.createElement(Form, {
            inline: true,
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 65
            },
            __self: this
        }, user && /*#__PURE__*/ _reactDefault.default.createElement(Link, {
            to: `/`,
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 67
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(Button, {
            variant: "dark",
            className: "logout-button",
            onClick: ()=>this.onLogout()
            ,
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 68
            },
            __self: this
        }, "Logout")))))), /*#__PURE__*/ _reactDefault.default.createElement(Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }));
                // return movies.map(m => <MovieCard key={m._id} movie={m} />)
                return(/*#__PURE__*/ _reactDefault.default.createElement(MoviesList, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 76
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(Route, {
            exact: true,
            path: "/login",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }));
                // return movies.map(m => <MovieCard key={m._id} movie={m} />)
                return(/*#__PURE__*/ _reactDefault.default.createElement(MoviesList, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 82
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(Route, {
            path: "/register",
            render: ()=>{
                if (!register) return(/*#__PURE__*/ _reactDefault.default.createElement(RegisterView, {
                    onRegister: (register1)=>this.onRegister(register1)
                }));
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 89
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(Route, {
            path: "/movies/:movieId",
            render: ({ match  })=>/*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    )
                })
            ,
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 93
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(Route, {
            path: "/directors/:name",
            render: ({ match  })=>{
                if (!movies.length) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ),
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 94
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(Route, {
            path: "/genres/:name",
            render: ({ match  })=>{
                if (!movies.length) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(GenreView, {
                    genre: movies.find((m)=>m.Genre.Name === match.params.name
                    ),
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 99
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(Route, {
            exact: true,
            path: "/users/:username",
            render: ({ history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (data)=>this.onLoggedIn(data)
                }));
                if (movies.length === 0) return;
                return(/*#__PURE__*/ _reactDefault.default.createElement(ProfileView, {
                    history: history,
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Documents\\myFlix-client\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 104
            },
            __self: this
        }))));
    }
}
let mapStateToProps = (state)=>{
    return {
        movies: state.movies,
        users: state.users
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies,
    setUsers
})(MainView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}